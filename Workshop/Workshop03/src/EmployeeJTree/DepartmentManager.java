/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package EmployeeJTree;

import java.awt.Color;
import java.util.HashSet;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author duclt
 */
public class DepartmentManager extends javax.swing.JFrame {
    
    DefaultMutableTreeNode root = null;
    DefaultMutableTreeNode curDepNode = null;
    DefaultMutableTreeNode curEmpNode = null;
    boolean addNewDep = false;
    boolean addNewEmp = false;
    
    HashSet<String> DepCodes = new HashSet<>();
    HashSet<String> EmpCodes = new HashSet<>();

    /**
     * Creates new form DepartmentManager
     */
    public DepartmentManager() {
        initComponents();
        root = (DefaultMutableTreeNode) this.tree.getModel().getRoot();
        MethodSupport.loadData(
                new DefaultMutableTreeNode[]{root, curDepNode, curEmpNode}, DepCodes, EmpCodes);
        TreePath path = new TreePath(root);
        tree.expandPath(path);
        MethodSupport.disableTxtbox(new JTextField[]{txtDepCode, txtDepName, txtEmpCode, txtEmpSalary, txtEmpName});
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tree = new javax.swing.JTree();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtDepCode = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDepName = new javax.swing.JTextField();
        btnNewDep = new javax.swing.JButton();
        btnRemoveDep = new javax.swing.JButton();
        btnSaveDep = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtEmpCode = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtEmpName = new javax.swing.JTextField();
        btnNewEmp = new javax.swing.JButton();
        btnSaveEmp = new javax.swing.JButton();
        btnRemoveEmp = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtEmpSalary = new javax.swing.JTextField();
        btnSaveFile = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Department");
        tree.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        tree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                treeMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tree);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Department Detail"));

        jLabel1.setText("Dept. code:");

        jLabel2.setText("Dept. name:");

        btnNewDep.setText("New");
        btnNewDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewDepActionPerformed(evt);
            }
        });

        btnRemoveDep.setText("Remove");
        btnRemoveDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveDepActionPerformed(evt);
            }
        });

        btnSaveDep.setText("Save");
        btnSaveDep.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveDepActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDepName)
                            .addComponent(txtDepCode)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnNewDep)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRemoveDep)
                        .addGap(52, 52, 52)
                        .addComponent(btnSaveDep)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtDepCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDepName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewDep)
                    .addComponent(btnRemoveDep)
                    .addComponent(btnSaveDep))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Employee Detail"));

        jLabel3.setText("Emp. code:");

        jLabel4.setText("Emp. name:");

        btnNewEmp.setText("New");
        btnNewEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewEmpActionPerformed(evt);
            }
        });

        btnSaveEmp.setText("Save");
        btnSaveEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveEmpActionPerformed(evt);
            }
        });

        btnRemoveEmp.setText("Remove");
        btnRemoveEmp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveEmpActionPerformed(evt);
            }
        });

        jLabel5.setText("Salary:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnNewEmp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                        .addComponent(btnRemoveEmp)
                        .addGap(50, 50, 50)
                        .addComponent(btnSaveEmp))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmpSalary)
                            .addComponent(txtEmpName)
                            .addComponent(txtEmpCode))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtEmpCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtEmpName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtEmpSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNewEmp)
                    .addComponent(btnSaveEmp)
                    .addComponent(btnRemoveEmp)))
        );

        btnSaveFile.setText("Save File");
        btnSaveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveFileActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSaveFile, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveFile)
                        .addGap(17, 17, 17))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void viewDeptAndEmp() {
        Department curDep = null;
        Employee curEmp = null;
        if (curDepNode != null) {
            curDep = (Department) (curDepNode.getUserObject());
        }
        if (curEmpNode != null) {
            curEmp = (Employee) (curEmpNode.getUserObject());
        }        
        this.txtDepCode.setText(curDep != null ? curDep.getDepCode() : "");
        this.txtDepName.setText(curDep != null ? curDep.getDepName() : "");
        this.txtEmpCode.setText(curEmp != null ? curEmp.getEmpCode() : "");
        this.txtEmpName.setText(curEmp != null ? curEmp.getEmpName() : "");
        this.txtEmpSalary.setText("" + (curEmp != null ? curEmp.getSalary() : ""));
        this.txtDepCode.setEditable(false);
        this.txtDepCode.setBackground(Color.GRAY);
        this.txtEmpCode.setEditable(false);
        this.txtEmpCode.setBackground(Color.GRAY);
    }

    private void btnNewDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewDepActionPerformed
        // TODO add your handling code here:
        MethodSupport.clearTxtbox(new JTextField[]{txtDepCode, txtDepName});
        addNewDep = true;
    }//GEN-LAST:event_btnNewDepActionPerformed

    private void btnSaveDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveDepActionPerformed
        // TODO add your handling code here:
        if (txtDepCode.getBackground() != Color.WHITE && txtDepName.getBackground() != Color.WHITE) {
            JOptionPane.showMessageDialog(null, "Cannot save without data");
            return;
        }
        
        String code = this.txtDepCode.getText().trim().toUpperCase();
        String name = this.txtDepName.getText().trim();
        txtDepCode.setText(code);
        txtDepName.setText(name);

        // Validate
        if (!Validator.checkTxtbox(code, "DEPCODE")) {
            JOptionPane.showMessageDialog(null, "Must Numbers/ Characters ; Length: 2-5");
            txtDepCode.setFocusable(true);
            return;
        }
        if (!Validator.checkTxtbox(name, "NAME")) {
            JOptionPane.showMessageDialog(null, "Must Length: 2 - 30 ; Unicode ; No Number");
            txtDepName.setFocusable(true);
            return;
        }
        //////////////////////////////////////////////////////

        if (addNewDep == true) {
            Department newDep = new Department(code, name);
            if (DepCodes.add(newDep.getDepCode())) {
                root.add(new DefaultMutableTreeNode(newDep));
                JOptionPane.showMessageDialog(null, "Added");
                MethodSupport.disableTxtbox(new JTextField[]{txtDepCode, txtDepName});
            } else {
                JOptionPane.showMessageDialog(null, "Duplicate Code.");
                txtDepCode.setFocusable(true);
                return;
            }
        } else {
            TreePath path = tree.getSelectionPath();
            if (path == null) {
                JOptionPane.showMessageDialog(null, "Can't add Department");
                return;
            }
            ((Department) curDepNode.getUserObject()).setDepName(name);
            JOptionPane.showMessageDialog(null, "Updated");
        }
        
        this.tree.updateUI();
        this.addNewDep = false;
    }//GEN-LAST:event_btnSaveDepActionPerformed

    private void btnRemoveDepActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveDepActionPerformed
        // TODO add your handling code here:         
        TreePath path = tree.getSelectionPath();
        if (path == null) {
            JOptionPane.showMessageDialog(this, "Nothing to remove");
            return;
        }
        if (this.curDepNode.getChildCount() > 0) {
            String msg = "Remove all employess before deleting a department.";
            JOptionPane.showMessageDialog(this, msg);
            return;
        }
        int response = JOptionPane.showConfirmDialog(this, "Delete this department- OK?");
        if (response == JOptionPane.OK_OPTION) {
            Department Dept = (Department) this.curDepNode.getUserObject();
            DepCodes.remove(Dept.getDepCode());
            root.remove(this.curDepNode);
            MethodSupport.clearTxtbox(new JTextField[]{txtDepCode, txtDepName});
            tree.clearSelection();
            tree.updateUI();
        }
        tree.setSelectionPath(null);
        addNewDep = false;
        addNewEmp = false;
    }//GEN-LAST:event_btnRemoveDepActionPerformed

    private void btnNewEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewEmpActionPerformed
        // TODO add your handling code here:
        if (txtDepCode.getText().isEmpty() && txtDepName.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please choose Department first");
            return;
        }
        MethodSupport.clearTxtbox(new JTextField[]{txtEmpCode, txtEmpName, txtEmpSalary});
        
        addNewEmp = true;
    }//GEN-LAST:event_btnNewEmpActionPerformed

    private void btnRemoveEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveEmpActionPerformed
        // TODO add your handling code here:        
        TreePath path = tree.getSelectionPath();
        if (path == null) {
            JOptionPane.showMessageDialog(this, "Nothing to remove");
            return;
        }
        if (this.curEmpNode != null) {
            int response = JOptionPane.showConfirmDialog(this, "Delete this employee- OK?");
            if (response == JOptionPane.OK_OPTION) {
                Employee Emp = (Employee) this.curEmpNode.getUserObject();
                EmpCodes.remove(Emp.getEmpCode());
                curDepNode.remove(this.curEmpNode);
                MethodSupport.clearTxtbox(new JTextField[]{txtEmpCode, txtEmpName, txtEmpSalary});
                MethodSupport.disableTxtbox(new JTextField[]{txtEmpCode, txtEmpName, txtEmpSalary});
                tree.clearSelection();
                tree.updateUI();
            }
        } else {
            JOptionPane.showMessageDialog(this, "Nothing to remove");
            return;
        }
        tree.setSelectionPath(null);
        addNewEmp = false;

    }//GEN-LAST:event_btnRemoveEmpActionPerformed

    private void btnSaveEmpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveEmpActionPerformed
        // TODO add your handling code here:
        TreePath path = tree.getSelectionPath();
        if (path == null) {
            return;
        }
        String code = this.txtEmpCode.getText().trim().toUpperCase();
        String name = this.txtEmpName.getText().trim();
        String salaryStr = this.txtEmpSalary.getText().trim();
        
        txtEmpCode.setText(code);
        txtEmpName.setText(name);
        txtEmpSalary.setText(salaryStr);

        // Validate 
        if (!Validator.checkTxtbox(code, "EMPCODE")) {
            JOptionPane.showMessageDialog(null, "Must Exxx");
            return;
        }
        if (!Validator.checkTxtbox(name, "NAME")) {
            JOptionPane.showMessageDialog(null, "Must Length: 2 - 30 ; Unicode ; No Number");
            return;
        }
        if (!Validator.checkTxtbox(salaryStr, "SALARY")) {
            JOptionPane.showMessageDialog(null, "Must Positive Integer.");
            return;
        }
        ///////////////////////////////////////////////////

        int sal = Integer.parseInt(salaryStr);
        if (addNewEmp == true) {
            Employee newEmp = new Employee(code, name, sal);
            if (EmpCodes.add(newEmp.getEmpCode())) {
                curDepNode.add(new DefaultMutableTreeNode(newEmp));
            } else {
                JOptionPane.showMessageDialog(null, "Duplicate Code.");
                return;
            }
            
        } else {
            Employee emp = (Employee) (curEmpNode.getUserObject());
            emp.setEmpName(name);
            emp.setSalary(sal);
        }
        this.tree.updateUI();
        this.addNewEmp = false;
        this.txtEmpCode.setEditable(false);
    }//GEN-LAST:event_btnSaveEmpActionPerformed

    private void btnSaveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveFileActionPerformed
        MethodSupport.saveFile(root);
    }//GEN-LAST:event_btnSaveFileActionPerformed

    private void treeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_treeMouseClicked
        // TODO add your handling code here:
        tree.cancelEditing();
        // Get the clicked node at the last component of the path
        TreePath path = tree.getSelectionPath();
        if (path == null) {
            return;
        }
        DefaultMutableTreeNode selectedNode = null;
        selectedNode = (DefaultMutableTreeNode) (path.getLastPathComponent());
        // Get the selected object in the model
        Object selectedObj = selectedNode.getUserObject();
        // Checking what is selected object
        if (selectedNode == root) {
            this.curDepNode = this.curEmpNode = null;
            MethodSupport.disableTxtbox(new JTextField[]{txtDepCode, txtDepName, txtEmpCode, txtEmpName, txtEmpSalary});
        } else if (selectedObj instanceof Department) {
            this.curDepNode = selectedNode;
            MethodSupport.disableTxtbox(new JTextField[]{txtEmpCode, txtEmpName, txtEmpSalary});
            MethodSupport.clearTxtbox(new JTextField[]{txtDepCode, txtDepName});
            this.curEmpNode = null;
        } else if (selectedObj instanceof Employee) {
            MethodSupport.clearTxtbox(new JTextField[]{txtDepCode, txtDepName, txtEmpCode, txtEmpName, txtEmpSalary});
            curEmpNode = selectedNode;
            curDepNode = (DefaultMutableTreeNode) (selectedNode.getParent());
        }
        addNewDep = false;
        addNewEmp = false;
        viewDeptAndEmp();
    }//GEN-LAST:event_treeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DepartmentManager.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DepartmentManager().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnNewDep;
    private javax.swing.JButton btnNewEmp;
    private javax.swing.JButton btnRemoveDep;
    private javax.swing.JButton btnRemoveEmp;
    private javax.swing.JButton btnSaveDep;
    private javax.swing.JButton btnSaveEmp;
    private javax.swing.JButton btnSaveFile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree tree;
    private javax.swing.JTextField txtDepCode;
    private javax.swing.JTextField txtDepName;
    private javax.swing.JTextField txtEmpCode;
    private javax.swing.JTextField txtEmpName;
    private javax.swing.JTextField txtEmpSalary;
    // End of variables declaration//GEN-END:variables
}
