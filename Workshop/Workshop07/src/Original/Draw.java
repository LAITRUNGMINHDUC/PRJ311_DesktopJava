/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Original;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Point;
import java.util.List;
import javax.swing.ButtonGroup;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Group;
import javax.swing.JColorChooser;
import javax.swing.JPanel;

/**
 *
 * @author HP
 */
public class Draw extends javax.swing.JFrame {

    Graphics g = null;
    Point p1 = null, p2 = null;
    Color color = Color.RED;

    /**
     * Creates new form DrawWithMouse
     */
    public Draw() {
        initComponents();
        g = this.pnlLines.getGraphics();
        ButtonGroup btng = new ButtonGroup();
        btng.add(rbtDrawOnly);
        btng.add(rbtDrawFill);
        this.rbtDrawOnly.setSelected(true);
        this.rbtDrawFill.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnColor = new javax.swing.JButton();
        rbtDrawOnly = new javax.swing.JRadioButton();
        rbtDrawFill = new javax.swing.JRadioButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlLines = new javax.swing.JPanel();
        pnlEllipse = new javax.swing.JPanel();
        pnlRectangles = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnColor.setText("Select Color");
        btnColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnColorActionPerformed(evt);
            }
        });
        jPanel1.add(btnColor);

        rbtDrawOnly.setText("Draw Only");
        rbtDrawOnly.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbtDrawOnlyActionPerformed(evt);
            }
        });
        jPanel1.add(rbtDrawOnly);

        rbtDrawFill.setText("Draw and Fill");
        jPanel1.add(rbtDrawFill);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_START);

        jTabbedPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane1MouseClicked(evt);
            }
        });

        pnlLines.setName(""); // NOI18N
        pnlLines.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlLinesMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pnlLinesMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlLinesLayout = new javax.swing.GroupLayout(pnlLines);
        pnlLines.setLayout(pnlLinesLayout);
        pnlLinesLayout.setHorizontalGroup(
            pnlLinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 612, Short.MAX_VALUE)
        );
        pnlLinesLayout.setVerticalGroup(
            pnlLinesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Lines", pnlLines);

        pnlEllipse.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlEllipseMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pnlEllipseMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlEllipseLayout = new javax.swing.GroupLayout(pnlEllipse);
        pnlEllipse.setLayout(pnlEllipseLayout);
        pnlEllipseLayout.setHorizontalGroup(
            pnlEllipseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 612, Short.MAX_VALUE)
        );
        pnlEllipseLayout.setVerticalGroup(
            pnlEllipseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Ellipses", pnlEllipse);

        pnlRectangles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pnlRectanglesMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                pnlRectanglesMouseReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlRectanglesLayout = new javax.swing.GroupLayout(pnlRectangles);
        pnlRectangles.setLayout(pnlRectanglesLayout);
        pnlRectanglesLayout.setHorizontalGroup(
            pnlRectanglesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 612, Short.MAX_VALUE)
        );
        pnlRectanglesLayout.setVerticalGroup(
            pnlRectanglesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 341, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Rectangles", pnlRectangles);

        getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTabbedPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTabbedPane1MouseClicked
        // TODO add your handling code here:
        int index = this.jTabbedPane1.getSelectedIndex();
        switch (index) {
            case 0:
                g = pnlLines.getGraphics();
                this.rbtDrawOnly.setEnabled(true);
                this.rbtDrawFill.setEnabled(false);
                break;
            case 1:
                g = pnlEllipse.getGraphics();
                this.rbtDrawFill.setEnabled(true);
                break;
            case 2:
                g = pnlRectangles.getGraphics();
                this.rbtDrawFill.setEnabled(true);
                break;
        }
        g.setColor(color);
    }//GEN-LAST:event_jTabbedPane1MouseClicked

    
        
    private void pnlEllipseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEllipseMousePressed
        // TODO add your handling code here:
        p1 = evt.getPoint();
    }//GEN-LAST:event_pnlEllipseMousePressed

    private void pnlEllipseMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlEllipseMouseReleased
        // TODO add your handling code here:
        p2 = evt.getPoint();
        int left = p1.x < p2.x ? p1.x : p2.x;
        int top = p1.y < p2.y ? p1.y : p2.y;
        int width = p1.x - p2.x;
        if (width < 0) {
            width = -width;
        }
        int height = p1.y - p2.y;
        if (height < 0) {
            height = -height;
        }
        if (rbtDrawOnly.isSelected()) {
            g.drawOval(left, top, width, height);
        } else {
            g.fillOval(left, top, width, height);
        }
        p1 = p2 = null;
    }//GEN-LAST:event_pnlEllipseMouseReleased

    private void pnlRectanglesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlRectanglesMousePressed
        // TODO add your handling code here:
        p1 = evt.getPoint();

    }//GEN-LAST:event_pnlRectanglesMousePressed

    private void pnlRectanglesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlRectanglesMouseReleased
        // TODO add your handling code here:
        p2 = evt.getPoint();
        int left = p1.x < p2.x ? p1.x : p2.x;
        int top = p1.y < p2.y ? p1.y : p2.y;
        int width = p1.x - p2.x;
        if (width < 0) {
            width = -width;
        }
        int height = p1.y - p2.y;
        if (height < 0) {
            height = -height;
        }
        if (rbtDrawOnly.isSelected()) {
            g.drawRect(left, top, width, height);
        } else {
            g.fillRect(left, top, width, height);
        }
        p1 = p2 = null;
    }//GEN-LAST:event_pnlRectanglesMouseReleased

    private void rbtDrawOnlyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbtDrawOnlyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbtDrawOnlyActionPerformed

    private void btnColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnColorActionPerformed
        // TODO add your handling code here:
        JColorChooser jcc = new JColorChooser();
        color = JColorChooser.showDialog(this, "Change color", color);
    }//GEN-LAST:event_btnColorActionPerformed

    private void pnlLinesMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlLinesMousePressed
        // TODO add your handling code here:
        p1 = evt.getPoint();
    }//GEN-LAST:event_pnlLinesMousePressed

    private void pnlLinesMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnlLinesMouseReleased
        // TODO add your handling code here:
        p2 = evt.getPoint();
        g.drawLine(p1.x, p1.y, p2.x, p2.y);
        p1 = p2 = null;
    }//GEN-LAST:event_pnlLinesMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Draw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Draw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Draw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Draw.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Draw().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnColor;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel pnlEllipse;
    private javax.swing.JPanel pnlLines;
    private javax.swing.JPanel pnlRectangles;
    private javax.swing.JRadioButton rbtDrawFill;
    private javax.swing.JRadioButton rbtDrawOnly;
    // End of variables declaration//GEN-END:variables
}
